version: '3.8'

services:
  # Service pour le frontend (Nginx)
  frontend:
    image: nginx:alpine
    ports:
      - "80:80" # Mappe le port 80 de l'hôte au port 80 du conteneur
    volumes:
      - ./frontend:/usr/share/nginx/html # Monte le dossier frontend dans le conteneur
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend # Le frontend dépend du backend (pour la communication API)

  # Service pour le backend (PHP-FPM)
  backend:
    build: ./backend # Construit l'image à partir du Dockerfile dans le dossier backend
    volumes:
      - ./backend:/var/www/html # Monte le dossier backend dans le conteneur
    depends_on:
      - database # Le backend dépend de la base de données

  # Service pour la base de données (MySQL)
  database:
    image: mysql:8.0 # Utilise l'image officielle MySQL 8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Mot de passe root pour MySQL (à changer en production)
      MYSQL_DATABASE: mon_app_db # Nom de la base de données
      MYSQL_USER: user # Nom d'utilisateur de la base de données
      MYSQL_PASSWORD: user_password # Mot de passe de l'utilisateur
    volumes:
      - db_data:/var/lib/mysql # Volume persistant pour les données de la base de données
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # Exécute le script SQL au démarrage

# Définition des volumes persistants
volumes:
  db_data: # Volume pour les données MySQL